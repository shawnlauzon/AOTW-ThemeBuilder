package com.confidentsoftware.themebuilder;

import android.app.Activity;
import android.app.Fragment;
import android.app.LoaderManager;
import android.content.ContentUris;
import android.content.ContentValues;
import android.content.Context;
import android.content.CursorLoader;
import android.content.Loader;
import android.content.res.TypedArray;
import android.database.Cursor;
import android.net.Uri;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.AdapterView;
import android.widget.Gallery;
import android.widget.SimpleCursorAdapter;
import android.widget.TextView;
import android.widget.AdapterView.OnItemClickListener;

import com.confidentsoftware.themebuilder.Dictionary.Themes;

public class ThemeGallery extends Fragment implements
		LoaderManager.LoaderCallbacks<Cursor>, OnClickListener,
		OnItemClickListener {

	private static final String TAG = "ThemeGallery";

	// private static final String[] PROJECTION_IMAGES = { Images.THUMB_URL,
	// Images._ID };
	// private static final int[] LAYOUT_FIELDS = { R.id.image1, R.id.image2,
	// R.id.image3, R.id.image4, R.id.title };
	private static final String[] PROJECTION_THEMES = { Themes.NAME, Themes._ID };
	private static final int[] LAYOUT_FIELDS = { R.id.title };
	private static final int ID_COLUMN = 1;

	private ThemeAdapter mAdapter;
	private Gallery mGallery;

	private OnThemeSelectedListener mListener;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		super.onCreateView(inflater, container, savedInstanceState);
		return inflater.inflate(R.layout.theme_gallery, container, false);
	}

	@Override
	public void onActivityCreated(Bundle savedInstanceState) {
		super.onActivityCreated(savedInstanceState);
		Activity activity = getActivity();
		activity.findViewById(R.id.new_theme_button).setOnClickListener(this);

		mGallery = (Gallery) activity.findViewById(R.id.gallery);
		mGallery.setOnItemClickListener(this);

		mAdapter = new ThemeAdapter(getActivity());
		mAdapter.setViewBinder(new ImageViewBinder(getActivity()));
		mGallery.setAdapter(mAdapter);

		getLoaderManager().initLoader(0, null, this);
	}

	@Override
	public void onAttach(Activity activity) {
		super.onAttach(activity);
		try {
			mListener = (OnThemeSelectedListener) activity;
		} catch (ClassCastException e) {
			throw new ClassCastException(activity.toString()
					+ " must implement OnThemeSelectedListener");
		}
	}

	@Override
	public Loader<Cursor> onCreateLoader(int id, Bundle args) {
		return new CursorLoader(getActivity(), Themes.CONTENT_URI,
				PROJECTION_THEMES, null, null, Themes._ID);
	}

	@Override
	public void onLoadFinished(Loader<Cursor> loader, Cursor data) {
		mAdapter.swapCursor(data);
	}

	@Override
	public void onLoaderReset(Loader<Cursor> data) {
		mAdapter.swapCursor(null);
	}

	@Override
	public void onClick(View v) {
		ContentValues values = new ContentValues();
		values.put(Themes.NAME, "Animals");
		Uri uri = getActivity().getContentResolver().insert(Themes.CONTENT_URI,
				values);
		mListener.onThemeSelected(uri);
		mListener.onLoadWordList("animals_en.txt");
	}

	@Override
	public void onItemClick(AdapterView<?> parent, View v, int position, long id) {
		mListener.onThemeSelected(ContentUris.withAppendedId(
				Themes.CONTENT_URI, id));
	}

	/**
	 * Implemented by the Activity to handle events generated by this fragment.
	 * 
	 * @author slauzon
	 * 
	 */
	public interface OnThemeSelectedListener {
		public void onThemeSelected(Uri themeUri);

		public void onLoadWordList(String fileName);
	}

	/**
	 * Maps columns from a cursor to the fields defined in the XML file. Each
	 * row of the cursor gets inflated into a theme_gallery_item.
	 * 
	 * @author slauzon
	 * 
	 */
	private static class ThemeAdapter extends SimpleCursorAdapter {

		private int mGalleryItemBackground;

		public ThemeAdapter(Context context) {
			super(context, R.layout.theme_gallery_item, null,
					PROJECTION_THEMES, LAYOUT_FIELDS, 0);
			TypedArray a = context
					.obtainStyledAttributes(R.styleable.ThemeGallery);
			mGalleryItemBackground = a.getResourceId(
					R.styleable.ThemeGallery_android_galleryItemBackground, 0);
			a.recycle();
		}
		
		@Override
		public void bindView(View view, Context context, Cursor cursor) {
			super.bindView(view, context, cursor);
	        view.setLayoutParams(new Gallery.LayoutParams(130, LayoutParams.WRAP_CONTENT));
			view.setBackgroundResource(mGalleryItemBackground);
		}

		@Override
		public boolean hasStableIds() {
			return true;
		}
	}

	private static class ImageViewBinder implements
			SimpleCursorAdapter.ViewBinder {

		ImageViewBinder(Context context) {
		}

		@Override
		public boolean setViewValue(View view, Cursor cursor, int columnIndex) {
			String title = cursor.getString(columnIndex);
			((TextView) view.findViewById(R.id.title)).setText(title);
			return false;
		}
	}
}
